name: build
on:
  push:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install cosign
      uses: sigstore/cosign-installer@v3.6.0
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        rustflags: ""
        cache: false
    - name: Build
      run: ./build.sh
    - name: Build again
      run: |
        set -e
        mkdir /tmp/bsdloader-build
        cp -rf ./{.cargo,src,Cargo.toml,Cargo.lock,rust-toolchain.toml,build.sh} /tmp/bsdloader-build/
        cd /tmp/bsdloader-build/
        ./build.sh
    - name: Verify reproducibility
      run: |
        set -e

        # internally reproducible
        hexdump -C < target/x86_64-unknown-uefi/release/bsdloader.efi > 1.hexdump
        hexdump -C < /tmp/bsdloader-build/target/x86_64-unknown-uefi/release/bsdloader.efi > 2.hexdump
        diff -u 1.hexdump 2.hexdump

        # also check consistency with committed hash
        calculated_hash="$(sha256sum target/x86_64-unknown-uefi/release/bsdloader.efi | head -c 64)"
        echo "Calculated hash: $calculated_hash"
        committed_hash="$(cat reproducible-sha256.txt | head -c 64)"
        if [ "$calculated_hash" != "$committed_hash" ]; then
          echo "Hash mismatch: $calculated_hash != $committed_hash"
          exit 1
        fi
    - name: Sign
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        set -e
        mkdir build
        cp target/x86_64-unknown-uefi/release/bsdloader.efi ./build/
        cd build
        cosign sign-blob -y --bundle bsdloader.cosign-bundle.json bsdloader.efi
        ls -lash
        cat bsdloader.cosign-bundle.json
    - name: Publish release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./build/bsdloader.efi
          ./build/bsdloader.cosign-bundle.json
        prerelease: true
